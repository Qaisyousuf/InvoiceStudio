<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- ============================================ -->
    <!-- BASE BADGE STYLES -->
    <!-- ============================================ -->

    <Style x:Key="BaseBadge" TargetType="Border">
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Small Badge -->
    <Style x:Key="SmallBadge" TargetType="Border">
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Large Badge -->
    <Style x:Key="LargeBadge" TargetType="Border">
        <Setter Property="CornerRadius" Value="24"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- ============================================ -->
    <!-- BADGE TEXT STYLES -->
    <!-- ============================================ -->

    <!-- Base Badge Text -->
    <Style x:Key="BaseBadgeText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Typography.Capitals" Value="AllSmallCaps"/>
       
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Small Badge Text -->
    <Style x:Key="SmallBadgeText" TargetType="TextBlock" BasedOn="{StaticResource BaseBadgeText}">
        <Setter Property="FontSize" Value="11"/>
    </Style>

    <!-- Large Badge Text -->
    <Style x:Key="LargeBadgeText" TargetType="TextBlock" BasedOn="{StaticResource BaseBadgeText}">
        <Setter Property="FontSize" Value="13"/>
    </Style>

    <!-- ============================================ -->
    <!-- SUCCESS BADGES (Paid, Active, Complete) -->
    <!-- ============================================ -->

    <!-- Success Badge -->
    <Style x:Key="SuccessBadge" TargetType="Border" BasedOn="{StaticResource BaseBadge}">
        <Setter Property="Background" Value="{StaticResource BadgeSuccessBg}"/>
    </Style>

    <!-- Success Badge Text -->
    <Style x:Key="SuccessBadgeText" TargetType="TextBlock" BasedOn="{StaticResource BaseBadgeText}">
        <Setter Property="Foreground" Value="{StaticResource BadgeSuccessText}"/>
    </Style>

    <!-- Small Success Badge -->
    <Style x:Key="SmallSuccessBadge" TargetType="Border" BasedOn="{StaticResource SmallBadge}">
        <Setter Property="Background" Value="{StaticResource BadgeSuccessBg}"/>
    </Style>

    <!-- ============================================ -->
    <!-- WARNING BADGES (Pending, Processing) -->
    <!-- ============================================ -->

    <!-- Warning Badge -->
    <Style x:Key="WarningBadge" TargetType="Border" BasedOn="{StaticResource BaseBadge}">
        <Setter Property="Background" Value="{StaticResource BadgeWarningBg}"/>
    </Style>

    <!-- Warning Badge Text -->
    <Style x:Key="WarningBadgeText" TargetType="TextBlock" BasedOn="{StaticResource BaseBadgeText}">
        <Setter Property="Foreground" Value="{StaticResource BadgeWarningText}"/>
    </Style>

    <!-- Small Warning Badge -->
    <Style x:Key="SmallWarningBadge" TargetType="Border" BasedOn="{StaticResource SmallBadge}">
        <Setter Property="Background" Value="{StaticResource BadgeWarningBg}"/>
    </Style>

    <!-- ============================================ -->
    <!-- ERROR BADGES (Overdue, Failed, Cancelled) -->
    <!-- ============================================ -->

    <!-- Error Badge -->
    <Style x:Key="ErrorBadge" TargetType="Border" BasedOn="{StaticResource BaseBadge}">
        <Setter Property="Background" Value="{StaticResource BadgeErrorBg}"/>
    </Style>

    <!-- Error Badge Text -->
    <Style x:Key="ErrorBadgeText" TargetType="TextBlock" BasedOn="{StaticResource BaseBadgeText}">
        <Setter Property="Foreground" Value="{StaticResource BadgeErrorText}"/>
    </Style>

    <!-- Small Error Badge -->
    <Style x:Key="SmallErrorBadge" TargetType="Border" BasedOn="{StaticResource SmallBadge}">
        <Setter Property="Background" Value="{StaticResource BadgeErrorBg}"/>
    </Style>

    <!-- ============================================ -->
    <!-- INFO BADGES (Draft, New, Info) -->
    <!-- ============================================ -->

    <!-- Info Badge -->
    <Style x:Key="InfoBadge" TargetType="Border" BasedOn="{StaticResource BaseBadge}">
        <Setter Property="Background" Value="{StaticResource BadgeInfoBg}"/>
    </Style>

    <!-- Info Badge Text -->
    <Style x:Key="InfoBadgeText" TargetType="TextBlock" BasedOn="{StaticResource BaseBadgeText}">
        <Setter Property="Foreground" Value="{StaticResource BadgeInfoText}"/>
    </Style>

    <!-- Small Info Badge -->
    <Style x:Key="SmallInfoBadge" TargetType="Border" BasedOn="{StaticResource SmallBadge}">
        <Setter Property="Background" Value="{StaticResource BadgeInfoBg}"/>
    </Style>

    <!-- ============================================ -->
    <!-- SPECIAL BADGES WITH INDICATORS -->
    <!-- ============================================ -->

    <!-- Live Badge (with animated dot) -->
    <Style x:Key="LiveBadge" TargetType="Border" BasedOn="{StaticResource SuccessBadge}">
        <!-- Contains animated dot + text -->
    </Style>

    <!-- Live Dot Animation -->
    <Style x:Key="LiveDotIndicator" TargetType="Ellipse">
        <Setter Property="Width" Value="6"/>
        <Setter Property="Height" Value="6"/>
        <Setter Property="Fill" Value="{StaticResource Success}"/>
        <Setter Property="Margin" Value="0,0,6,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard RepeatBehavior="Forever">
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                       From="1" To="0.3" Duration="0:0:1"
                                       AutoReverse="True"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- Active Badge (with pulse effect) -->
    <Style x:Key="ActiveBadge" TargetType="Border" BasedOn="{StaticResource InfoBadge}">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard RepeatBehavior="Forever">
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                       From="1" To="1.05" Duration="0:0:2"
                                       AutoReverse="True"/>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                       From="1" To="1.05" Duration="0:0:2"
                                       AutoReverse="True"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
      
    </Style>

    <!-- ============================================ -->
    <!-- INVOICE STATUS BADGES -->
    <!-- ============================================ -->

    <!-- Draft Badge -->
    <Style x:Key="DraftBadge" TargetType="Border" BasedOn="{StaticResource SmallBadge}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#6B7280" Opacity="0.15"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Draft Badge Text -->
    <Style x:Key="DraftBadgeText" TargetType="TextBlock" BasedOn="{StaticResource SmallBadgeText}">
        <Setter Property="Foreground" Value="{StaticResource TextTertiary}"/>
    </Style>

    <!-- Paid Badge -->
    <Style x:Key="PaidBadge" TargetType="Border" BasedOn="{StaticResource SmallSuccessBadge}"/>

    <!-- Paid Badge Text -->
    <Style x:Key="PaidBadgeText" TargetType="TextBlock" BasedOn="{StaticResource SmallBadgeText}">
        <Setter Property="Foreground" Value="{StaticResource Success}"/>
    </Style>

    <!-- Pending Badge -->
    <Style x:Key="PendingBadge" TargetType="Border" BasedOn="{StaticResource SmallWarningBadge}"/>

    <!-- Pending Badge Text -->
    <Style x:Key="PendingBadgeText" TargetType="TextBlock" BasedOn="{StaticResource SmallBadgeText}">
        <Setter Property="Foreground" Value="{StaticResource Warning}"/>
    </Style>

    <!-- Overdue Badge -->
    <Style x:Key="OverdueBadge" TargetType="Border" BasedOn="{StaticResource SmallErrorBadge}"/>

    <!-- Overdue Badge Text -->
    <Style x:Key="OverdueBadgeText" TargetType="TextBlock" BasedOn="{StaticResource SmallBadgeText}">
        <Setter Property="Foreground" Value="{StaticResource Error}"/>
    </Style>

    <!-- Sent Badge -->
    <Style x:Key="SentBadge" TargetType="Border" BasedOn="{StaticResource SmallInfoBadge}"/>

    <!-- Sent Badge Text -->
    <Style x:Key="SentBadgeText" TargetType="TextBlock" BasedOn="{StaticResource SmallBadgeText}">
        <Setter Property="Foreground" Value="{StaticResource Primary}"/>
    </Style>

    <!-- ============================================ -->
    <!-- PRIORITY BADGES -->
    <!-- ============================================ -->

    <!-- High Priority Badge -->
    <Style x:Key="HighPriorityBadge" TargetType="Border" BasedOn="{StaticResource SmallBadge}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#EF4444" Opacity="0.15"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Medium Priority Badge -->
    <Style x:Key="MediumPriorityBadge" TargetType="Border" BasedOn="{StaticResource SmallBadge}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#F97316" Opacity="0.15"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Low Priority Badge -->
    <Style x:Key="LowPriorityBadge" TargetType="Border" BasedOn="{StaticResource SmallBadge}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#10B981" Opacity="0.15"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ============================================ -->
    <!-- NOTIFICATION BADGES -->
    <!-- ============================================ -->

    <!-- Notification Count Badge -->
    <Style x:Key="NotificationBadge" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource Error}"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="6,2"/>
    </Style>

    <!-- Notification Badge Text -->
    <Style x:Key="NotificationBadgeText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource TextWhite}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- ============================================ -->
    <!-- INTERACTIVE BADGES -->
    <!-- ============================================ -->

    <!-- Clickable Badge -->
    <Style x:Key="ClickableBadge" TargetType="Border" BasedOn="{StaticResource BaseBadge}">
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Toggle Badge (for filters) -->
    <Style x:Key="ToggleBadge" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="BadgeBorder"
                            Background="{StaticResource BackgroundTertiary}"
                            BorderBrush="{StaticResource BorderDefault}"
                            BorderThickness="1"
                            CornerRadius="20"
                            Padding="12,6">
                        <ContentPresenter HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="BadgeBorder" Property="Background" Value="{StaticResource BadgeInfoBg}"/>
                            <Setter TargetName="BadgeBorder" Property="BorderBrush" Value="{StaticResource Primary}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BadgeBorder" Property="BorderBrush" Value="{StaticResource Primary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ============================================ -->
    <!-- LAYOUT HELPERS -->
    <!-- ============================================ -->

    <!-- Badge Container (for multiple badges) -->
    <Style x:Key="BadgeContainer" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Badge with Spacing -->
    <Style x:Key="SpacedBadge" TargetType="Border" BasedOn="{StaticResource BaseBadge}">
        <Setter Property="Margin" Value="0,0,8,0"/>
    </Style>

</ResourceDictionary>